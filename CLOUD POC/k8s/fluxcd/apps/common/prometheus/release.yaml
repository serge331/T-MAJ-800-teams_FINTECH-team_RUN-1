apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus
  namespace: monitoring
spec:
  releaseName: prometheus
  chart:
    spec:
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus
        namespace: flux-system
      version: 45.31.1
  interval: 5m
  install:
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
  values:

    alertmanager:
      enabled: false

    grafana:
      enabled: true
      image:
        repository: grafana/grafana
      defaultDashboardsTimezone: Europe/Paris
      deploymentStrategy:
        type: Recreate
      rbac:
        pspEnabled: false
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: vault-issuer
          cert-manager.io/common-name: grafana.k8s.local
        hosts:
          - grafana.k8s.local
        ingressClassName: nginx
        path: /
        tls:
          - secretName: grafana-general-tls
            hosts:
            - grafana.k8s.local
      sidecar:
        image:
          repository: kiwigrid/k8s-sidecar
        datasources:
          defaultDatasourceEnabled: false
      additionalDataSources:
        - name: greentech
          type: prometheus
          uid: prometheus
          url: http://prometheus-kube-prometheus-prometheus.monitoring:9090/
          access: proxy
          isDefault: false
          jsonData:
            timeInterval: 30s
        - name: healthtech
          access: proxy
          basicAuth: false
          editable: false
          jsonData:
            tlsSkipVerify: true
            timeInterval: "30s"
          orgId: 1
          type: prometheus
          url: https://prometheus.k8s.local
          version: 1
        - name: Infra-Logs
          type: loki
          uid: Infra-Logs
          url: http://loki:3100/
          access: proxy
          isDefault: false
        - name: POC-Logs
          type: loki
          uid: POC-Logs
          url: https://loki.k8s.local
          access: proxy
          isDefault: false
          jsonData:
            tlsSkipVerify: true
      extraConfigmapMounts: 
        - name: grafana-cacert
          configMap: grafana-cacert
          mountPath: /etc/grafana/ssl/CACert.pem
          subPath: CACert.pem
          readOnly: true
      persistence:
        enabled: true
        storageClassName: storage-class-test
        existingClaim: pvc-grafana
      initChownData:
        enabled: false
      grafana.ini:
        auth.ldap:
          enabled: true
          allow_sign_up: true
          config_file: /etc/grafana/ldap.toml
      ldap:
        enabled: true
        existingSecret: ldap-grafana

    kubeControllerManager:
      insecureSkipVerify: true  

    kubeEtcd:
      service:
        enabled: true
        port: 2379
        targetPort: 2379
      serviceMonitor:
        scheme: https
        serverName: localhost
        caFile: /etc/prometheus/secrets/etcd-client-cert/etcd-ca
        certFile: /etc/prometheus/secrets/etcd-client-cert/etcd-client
        keyFile: /etc/prometheus/secrets/etcd-client-cert/etcd-client-key      

    kubeScheduler:
      insecureSkipVerify: true

    kube-state-metrics:
      image:
        registry: registry.groupein.local:9082
        repository: kube-state-metrics/kube-state-metrics    

    prometheus-node-exporter:
      image:
        registry: registry.groupein.local:9082
        repository: prometheus/node-exporter
      rbac:
        pspEnabled: true
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: Exists
          effect: "NoExecute"

    prometheus:
      serviceAccount:
        name: "prometheus"
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: vault-issuer
          cert-manager.io/common-name: prometheus.k8s.local
        hosts:
          - prometheus.k8s.local
        pathType: ImplementationSpecific
        tls:
          - secretName: prometheus-general-tls
            hosts:
              - prometheus.k8s.local
      prometheusSpec:
        secrets:
          - etcd-client-cert
          - ca-cert
        retention: 62d
        retentionSize: 35GB
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: storage-class-test
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 36Gi
        #ruleNamespaceSelector:
        #  any: true
        #serviceMonitorSelector:
          #matchLabels:
            #prometheus: todiscover
        serviceMonitorSelectorNilUsesHelmValues: false
        additionalScrapeConfigs: []
